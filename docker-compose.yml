version: '3.8'

services:
  # Main API Service
  wallet-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "9090:9090"  # Metrics port
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://wallet_user:wallet_pass@postgres:5432/bittensor_wallet
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=development-jwt-secret-change-in-production
      - ENCRYPTION_KEY=dev-encryption-key-32-chars-long
    depends_on:
      - postgres
      - redis
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    networks:
      - wallet-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: bittensor_wallet
      POSTGRES_USER: wallet_user
      POSTGRES_PASSWORD: wallet_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - wallet-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wallet_user -d bittensor_wallet"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - wallet-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Nginx Reverse Proxy (Production-like setup)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/ssl/certs
    depends_on:
      - wallet-api
    networks:
      - wallet-network
    restart: unless-stopped

  # Development Tools
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    networks:
      - wallet-network
    profiles:
      - dev

  # Redis Commander (Development)
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - wallet-network
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  wallet-network:
    driver: bridge

# Development override file (docker-compose.override.yml)
# Uncomment and create this file for development-specific configurations
# 
# version: '3.8'
# services:
#   wallet-api:
#     volumes:
#       - ./src:/app/src:ro
#     environment:
#       - DEBUG=true
#       - MOCK_BITTENSOR_NETWORK=true 